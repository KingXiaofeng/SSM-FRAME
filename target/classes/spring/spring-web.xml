<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
    第三步：配置web层，在spring文件夹里新建spring-web.xml文件。

    1、开启SpringMVC注解模式，可以使用@RequestMapping，@PathVariable，@ResponseBody等
    2、对静态资源处理，如js，css，jpg等
    3、配置jsp 显示ViewResolver，例如在controller中某个方法返回一个string类型的"login"，实际上会返回"/WEB-INF/login.jsp"
    4、扫描web层 @Controller
    -->

    <!-- 配置SpringMVC -->

    <!-- 一.开启SpringMVC注解模式 -->
    <!-- 简化配置：
        (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter
        (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持
    -->
    <mvc:annotation-driven/>

    <!-- 二、静态资源默认servlet配置
		(1)加入对静态资源的处理：js,gif,png
		(2)允许使用"/"做整体映射
	 -->
    <mvc:default-servlet-handler/>
    <!-- 对静态资源文件的访问 方案一 （二选一） -->
    <mvc:default-servlet-handler />
    <!-- 配置静态资源路径 方案二 （二选一） -->
    <mvc:resources mapping="/js/**" location="resources/js/"
                   cache-period="31556926" />
    <mvc:resources mapping="/css/**" location="resources/css/"
                   cache-period="31556926" />
    <mvc:resources mapping="/images/**" location="resources/image/"
                   cache-period="31556926" />

    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--启动Spring MVC的注解功能，完成请求和注解POJO的映射-->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /><!--json转换器-->
            </list>
        </property>
    </bean>

    <!-- 三、配置视图解析器jsp 显示ViewResolver -->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 国际化 -->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="resource.messages"/>
        <property name="defaultEncoding" value="UTF-8" />
    </bean>
    <!-- 基于Cookie的本地化解析器 -->
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="cookieMaxAge" value="604800" />
        <property name="defaultLocale" value="zh_CN" />
        <property name="cookieName" value="Language"></property>
    </bean>
    <!-- 四、扫描web相关的bean -->
    <context:component-scan base-package="com.ssm.frame.web"/>
</beans>